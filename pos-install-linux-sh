#!/usr/bin/env bash
# ----------------------------- VARIÁVEIS ----------------------------- #
URL_GOOGLE_CHROME="https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb"
URL_INSYNC="https://d2t3ff60b2tol4.cloudfront.net/builds/insync_3.0.23.40579-bionic_amd64.deb"
URL_JAVA_JDK="https://download.oracle.com/otn-pub/java/jdk/13.0.1+9/cec27d702aa74d5a8630c65ae61e4305/jdk-13.0.1_linux-x64_bin.deb"
URL_STS="https://download.springsource.com/release/STS4/4.4.1.RELEASE/dist/e4.13/spring-tool-suite-4-4.4.1.RELEASE-e4.13.0-linux.gtk.x86_64.tar.gz"

DIRETORIO_DOWNLOADS="$HOME/Downloads/programas"

DIRETORIO_APPS="$HOME/apps"
DIRETORIO_PROJECTS="$HOME/projects"

APT_SOFTWARES=(
  snapd
  curl
)

SNAP_SOFTWARES=(
  spotify
  gimp
  discord
  vlc
  inkscape
  krita
  kturtle
  postman
  docker
)

SNAP_SOFTWARES_CLASSIC=(
  sublime-text
  code
  android-studio
)
# ---------------------------------------------------------------------- #

# ----------------------------- REQUISITOS ----------------------------- #
## Removendo travas eventuais do apt ##
sudo rm /var/lib/dpkg/lock-frontend
sudo rm /var/cache/apt/archives/lock

## Adicionando/Confirmando arquitetura de 32 bits ##
sudo dpkg --add-architecture i386

## Atualizando o repositório ##
sudo apt update -y

# ---------------------------------------------------------------------- #

# ----------------------------- EXECUÇÃO ----------------------------- #
## Atualizando o repositório depois da adição de novos repositórios ##
sudo apt update -y

## Download e instalaçao de programas externos ##
mkdir "$DIRETORIO_DOWNLOADS"
mkdir "$DIRETORIO_APPS"
mkdir "$DIRETORIO_PROJECTS"

wget -c "$URL_GOOGLE_CHROME"       -P "$DIRETORIO_DOWNLOADS"
wget -c "$URL_INSYNC"              -P "$DIRETORIO_DOWNLOADS"
wget -c "$URL_JAVA_JDK"            -P "$DIRETORIO_DOWNLOADS"

wget -c "$URL_STS"                 -P "$DIRETORIO_APPS"

## Instalando pacotes .deb baixados na sessão anterior ##
sudo dpkg -i $DIRETORIO_DOWNLOADS/*.deb

# Instalar programas no apt
for nome_do_programa in ${APT_SOFTWARES[@]}; do
  if ! dpkg -l | grep -q $nome_do_programa; then # Só instala se já não estiver instalado
    apt install "$nome_do_programa" -y
  else
    echo "[INSTALADO] - $nome_do_programa"
  fi
done

sudo apt install --install-recommends winehq-stable wine-stable wine-stable-i386 wine-stable-amd64 -y

## Instalando pacotes Flatpak ##
flatpak install flathub com.obsproject.Studio -y

## Instalando pacotes Snap ##

for nome_do_programa in ${SNAP_SOFTWARES[@]}; do
    sudo snap install "$nome_do_programa"
    echo "[INSTALADO] - $nome_do_programa"
done

for nome_do_programa in ${SNAP_SOFTWARES_CLASSIC[@]}; do
    sudo snap install "$nome_do_programa" --classic
    echo "[INSTALADO] - $nome_do_programa"
done

## Instalando outros softwares ##

sudo tar -xvf $DIRETORIO_APPS/*.tar.gz

curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.1/install.sh | bash

export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm

nvm install node # "node" is an alias for the latest version

npm install -g @angular/cli
npm install -g ionic
npm install nativefier -g
npm install -g auto-changelog
npm i generate-changelog -g
# ---------------------------------------------------------------------- #

# ----------------------------- PÓS-INSTALAÇÃO ----------------------------- #
## Finalização, atualização e limpeza##
sudo apt update && sudo apt dist-upgrade -y
flatpak update
sudo apt autoclean
sudo apt autoremove -y
# ---------------------------------------------------------------------- #
